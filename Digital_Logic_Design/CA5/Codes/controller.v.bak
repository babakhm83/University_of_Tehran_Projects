`timescale 1ns/1ns
module controller(input detected,collected,transmitted,clk,rst, output reg detect,collect,load,transmit);
    parameter [1:0] Detecting=0,Collecting=1,Loading=2,Transmitting=3;
    reg [1:0] ns,ps;
    always@(Detected,Collected,Transmitted) begin
        ns=Detecting;
        {detect,collect,load,transmit} = 4'b0;
        case (ps)
            Detecting: begin ns = detected ? Collecting : Detecting; detect = 1; end
            Collecting: begin ns = detected ? Transmitting : Collecting; collect = 1; end
            Loading: begin ns = Transmitting; load = 1; transmit = 1; end
            Transmitting: begin ns = detected ? Detecting : Transmitting; transmit = 1; end
            default: ns= Detecting;
        endcase
    end
    assign sd=(ps==3'b110 ? ~serIn : 1'b0);
    always@(posedge clk, posedge rst) begin
        if(rst)
            ps<=Detecting;
        else if(detect)
            ps<=ns;
    end
endmodule