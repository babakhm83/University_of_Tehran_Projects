`timescale 1ns/1ns
module bit_counter_tb();
    reg sin=1, clk=0, rst=0;
    wire sd0,sd1;
    wire [7:0] nt;
    quartus_mealy_start_sequence_detector detector(sin,clk,rst,sd0);
    bit_counter counter(sd1,clk,sd0,nt,sin);
    initial forever begin #41;clk=~clk; end
    initial begin
        #82;
        #82;
        #20; sin=0;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=0;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=0;
        #82; sin=0;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=0;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=1; rst=1;
        #82; sin=1;
        #82; sin=1;
        #82; sin=0;
        #200
        $stop;
    end
endmodule